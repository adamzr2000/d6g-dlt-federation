# version: '3'
x-common-commands:
  node_entrypoint: &node_entrypoint >
    bash -c "
    ./start_node.sh
    "
services:
  bootnode:
    image: blockchain-node:geth-poa
    container_name: bootnode
    hostname: bootnode
    environment:
      - IDENTITY=bootnode
      - BOOTNODE_IP=${BOOTNODE_IP}
      - BOOTNODE_PORT=${BOOTNODE_PORT}
    command: *node_entrypoint
    volumes:
      - "./config:/src/"    
    networks:
      blockchain_network:
        ipv4_address: ${BOOTNODE_IP}
    restart: always

  node1:
    image: blockchain-node:geth-poa
    container_name: node1
    hostname: node1
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node1
      - ETHERBASE=${ETHERBASE_NODE_1}
      - IP_ADDR=${IP_NODE_1}
      - WS_PORT=${WS_PORT_NODE_1}
      - RPC_PORT=${RPC_PORT_NODE_1}
      - ETH_PORT=${ETH_PORT_NODE_1}
      - BOOTNODE_IP=${BOOTNODE_IP}
      - BOOTNODE_PORT=${BOOTNODE_PORT}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSTATS_IP=${ETH_NETSTATS_IP}
      - ETH_NETSTATS_PORT=${ETH_NETSTATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    ports:
      - "${WS_PORT_NODE_1}:${WS_PORT_NODE_1}"
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_1}
    restart: always

  node2:
    image: blockchain-node:geth-poa
    container_name: node2
    hostname: node2
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node2
      - ETHERBASE=${ETHERBASE_NODE_2}
      - IP_ADDR=${IP_NODE_2}
      - WS_PORT=${WS_PORT_NODE_2}
      - RPC_PORT=${RPC_PORT_NODE_2}
      - ETH_PORT=${ETH_PORT_NODE_2}
      - BOOTNODE_IP=${BOOTNODE_IP}
      - BOOTNODE_PORT=${BOOTNODE_PORT}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSTATS_IP=${ETH_NETSTATS_IP}
      - ETH_NETSTATS_PORT=${ETH_NETSTATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    ports:
      - "${WS_PORT_NODE_2}:${WS_PORT_NODE_2}"
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_2}
    restart: always

  node3:
    image: blockchain-node:geth-poa
    container_name: node3
    hostname: node3
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node3
      - ETHERBASE=${ETHERBASE_NODE_3}
      - IP_ADDR=${IP_NODE_3}
      - WS_PORT=${WS_PORT_NODE_3}
      - RPC_PORT=${RPC_PORT_NODE_3}
      - ETH_PORT=${ETH_PORT_NODE_3}
      - BOOTNODE_IP=${BOOTNODE_IP}
      - BOOTNODE_PORT=${BOOTNODE_PORT}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSTATS_IP=${ETH_NETSTATS_IP}
      - ETH_NETSTATS_PORT=${ETH_NETSTATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    ports:
      - "${WS_PORT_NODE_3}:${WS_PORT_NODE_3}"
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_3}
    restart: always

  eth-netstats:
    image: eth-netstats
    container_name: eth-netstats
    depends_on:
      - node1
    ports:
      - "${ETH_NETSTATS_PORT}:${ETH_NETSTATS_PORT}"
    networks:
      blockchain_network:
        ipv4_address: ${ETH_NETSTATS_IP}
    restart: always

networks:
  blockchain_network:
    name: blockchain_network
    ipam:
      driver: default
      config:
        - subnet: ${BLOCKCHAIN_SUBNET}
